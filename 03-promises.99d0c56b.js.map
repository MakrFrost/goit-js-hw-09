{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAoBtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,IAAIC,EAAgBC,KAAKC,SAAW,GACpCC,YAAW,KACLH,GACFF,EACE,qBAAqBH,QAAeC,kCAGxCG,EACE,oBAAoBJ,QAAeC,uCAEpCA,MA9BPL,EAAOa,iBAAiB,UAExB,SAAoBC,GAClBA,EAAMC,iBAEN,IAAIV,EAAQW,OAAOhB,EAAOK,MAAMY,OAC5BC,EAASF,OAAOhB,EAAOkB,OAAOD,OAC9BE,EAAOH,OAAOhB,EAAOmB,KAAKF,OAE9B,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCjB,EAAciB,EAAGf,GACdgB,MAAKC,GAAUC,EAAAzB,GAAS0B,OAAOC,QAAQH,KACvCI,OAAMC,GAASJ,EAAAzB,GAAS0B,OAAOI,QAAQD,KAE1CtB,GAASc","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', newPromise);\n\nfunction newPromise(event) {\n  event.preventDefault();\n\n  let delay = Number(formEl.delay.value);\n  let amount = Number(formEl.amount.value);\n  let step = Number(formEl.step.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(result => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    let shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          `Fulfilled promise ${position} in ${delay}ms. Ваш промiс було виконано!`\n        );\n      }\n      reject(\n        `Rejected promise ${position} in ${delay}ms. Ваш промiс було забраковано!`\n      );\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","Number","value","amount","step","i","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.99d0c56b.js.map"}